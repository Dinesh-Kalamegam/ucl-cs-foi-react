{"version":3,"sources":["images/undraw_informed_decision_p2lh.svg","NavBar.js","NavBar2.js","BarChart.js","Home.js","Card.js","Level.js","ModuleChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","process","activeClassName","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","BarChart","props","data","labels","arr","map","x","datasets","label","text","Home","Card","module_code","module_name","key","compare","a","b","Mean","Level","data2018","bar_text","level","toString","filter","sort","ModuleChart","means","percentile_5","percentile_25","percentile_75","percentile_95","entries","i","element","modulecodes","includes","modcode","indexOf","chart_data","Object","values","fill","borderColor","options","maintainAspectRatio","title","fontSize","legend","position","responsive","scales","xAxes","scaleLabel","labelString","yAxes","App","data2015","require","data2016","data2017","moduledata","exact","path","mod_path","concat","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,2D,8x3BCoB5BC,MAdf,WACI,OAEI,6BACI,wBAAIC,UAAU,WACV,wBAAIA,UAAU,YAAd,qCACA,4BAAI,kBAAC,IAAD,CAASC,GAAIC,qBAA4BC,gBAAgB,UAAzD,WACJ,4BAAI,kBAAC,IAAD,CAASF,GAAIC,2BAAkCC,gBAAgB,UAA/D,cACJ,4BAAI,kBAAC,IAAD,CAASF,GAAIC,2BAAkCC,gBAAgB,UAA/D,iB,0FCGFC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,MAAM,eAAD,OAPW,IAOX,OACLC,WARgB,KAUlBC,OAAQ,CACNF,MAXgB,IAYhBG,WAAY,GAEdC,YAAa,CACXJ,MAfgB,KAkBlBK,QAAST,EAAMU,OAAOD,QACtBE,QAAS,CACPC,SAAU,EACVC,gBAAiBb,EAAMc,QAAQC,WAAWC,QAC1CC,QAASjB,EAAMkB,QAAQ,Q,oBCjBZC,MAjBf,SAAkBC,GAEd,IAAMC,EAAO,CACTC,OAAQF,EAAMG,IAAIC,KAAI,SAAAC,GAAC,OAAIA,EAAE,kBAC7BC,SAAU,CACN,CACIC,MAAOP,EAAMQ,KACbP,KAAMD,EAAMG,IAAIC,KAAI,SAAAC,GAAC,OAAIA,EAAC,QAC1BZ,gBAAiB,aAK7B,OAAQ,kBAAC,IAAD,CAAKQ,KAAMA,K,cCaRQ,MAzBf,SAAcT,GAAQ,IAAD,cAC6BA,EAAMC,KADnC,GAIjB,OAJiB,oBAKb,yBAAK1B,UAAU,U,cCWRmC,MAjBf,YAA2C,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YACxB,OACI,yBAAKrC,UAAU,OAAOsC,IAAKF,GAC3B,kBAAC,IAAD,CAAMpC,UAAU,OAAOC,GAAIC,qBAA+BkC,GAEtD,yBAAKpC,UAAU,eACX,gCAAMoC,EAAN,MAGJ,yBAAKpC,UAAU,aACX,wBAAIA,UAAU,oBAAd,IAAmCqC,EAAnC,SCRhB,SAASE,EAAQC,EAAGC,GAChB,OAAID,EAAEE,KAAOD,EAAEC,MACH,EAERF,EAAEE,KAAOD,EAAEC,KACJ,EAEJ,EAmBIC,MAff,SAAelB,GACX,IAAMmB,EAAWnB,EAAMC,KAAK,GACtBmB,EAAW,6CAA+CpB,EAAMqB,MAAMC,WAC5E,OACI,6BACI,kBAAC,EAAD,CAAU/C,UAAU,YAAYiC,KAAMY,EAAUjB,IAAKgB,EAASI,QAAO,SAAAlB,GAAC,OAAIA,EAAEa,QAAUlB,EAAMqB,SAAOG,KAAKV,KACxG,yBAAKvC,UAAU,SACV4C,EAASI,QAAO,SAAAlB,GAAC,OAAIA,EAAEa,QAAUlB,EAAMqB,SAAOjB,KAAI,SAAAC,GAAC,OAChD,kBAAC,EAAD,CAAMM,YAAaN,EAAE,eAAgBO,YAAaP,EAAE,uB,eC2FzDoB,MA9Gf,SAAqBzB,GACjB,IADwB,EAElB0B,EAAQ,GACRC,EAAe,GACfC,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,GAClBlB,EAAc,GAPM,cASGZ,EAAMC,KAAK8B,WATd,IASxB,2BAAiD,CAAC,IAAD,yBAArCC,EAAqC,KAAlCC,EAAkC,KACzCC,EAAcD,EAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE,kBAEjC6B,EAAYC,SAASnC,EAAMoC,UAC3BV,EAAMM,GAAKC,EAAQC,EAAYG,QAAQrC,EAAMoC,UAAlC,KACXT,EAAaK,GAAKC,EAAQC,EAAYG,QAAQrC,EAAMoC,UAAU,OAC9DR,EAAcI,GAAKC,EAAQC,EAAYG,QAAQrC,EAAMoC,UAAU,QAC/DP,EAAcG,GAAKC,EAAQC,EAAYG,QAAQrC,EAAMoC,UAAU,QAC/DN,EAAcE,GAAKC,EAAQC,EAAYG,QAAQrC,EAAMoC,UAAU,QAC/DxB,EAAcqB,EAAQC,EAAYG,QAAQrC,EAAMoC,UAAU,iBAG1DV,EAAMM,GAAK,EACXL,EAAaK,GAAK,EAClBJ,EAAcI,GAAK,EACnBH,EAAcG,GAAK,EACnBF,EAAcE,GAAK,IAzBH,8BA6BxB,IACMM,EAAa,CACfpC,OA9BU,CAAC,KAAM,KAAM,KAAM,MA+B7BI,SAAU,CACN,CACIC,MAAO,OACPN,KAAMsC,OAAOC,OAAOd,GACpBe,MAPK,EAQLC,YAAa,SAIjB,CACInC,MAAO,MACPN,KAAMsC,OAAOC,OAAOb,GACpBc,MAfK,EAgBLC,YAAa,OAEjB,CACInC,MAAO,OACPN,KAAMsC,OAAOC,OAAOZ,GACpBa,MArBK,EAsBLC,YAAa,UAEjB,CACInC,MAAO,OACPN,KAAMsC,OAAOC,OAAOX,GACpBY,MA3BK,EA4BLC,YAAa,QAEjB,CACInC,MAAO,OACPN,KAAMsC,OAAOC,OAAOV,GACpBW,MAjCK,EAkCLC,YAAa,WAKzB,OACI,yBAAKnE,UAAU,oBACX,kBAAC,IAAD,CACI0B,KAAMqC,EACNK,QAAS,CACLC,qBAAoB,EACpBC,MAAO,CACH/D,SAAS,EACT0B,KAAM,CAACR,EAAMoC,QAAU,MAAQxB,EAAa,mCAC5CkC,SAAU,IAEdC,OAAQ,CAAEC,SAAU,UACpBC,YAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJC,WAAY,CACRtE,SAAS,EACTuE,YAAa,OACbP,SAAU,MAGlBQ,MAAO,CAAC,CACJF,WAAY,CACRtE,SAAS,EACTuE,YAAa,OACbP,SAAU,YCzD3BS,MAhCf,WACE,IAAIC,EAAWC,EAAQ,KACnBC,EAAWD,EAAQ,KACnBE,EAAWF,EAAQ,KACnBtC,EAAWsC,EAAQ,KACjBG,EAAa,CAACJ,EAAUE,EAAUC,EAAUxC,GAE9Ce,EAAcf,EAASf,KAAI,SAAAC,GAAC,OAAIA,EAAE,kBAEtC,OACE,yBAAK9B,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsF,OAAK,EAACC,KAAMrF,sBAA4B,kBAAC,EAAD,CAAMwB,KAAM2D,IAA3D,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMrF,4BAAkC,kBAAC,EAAD,CAAO4C,MAAO,EAAGpB,KAAM2D,IAA5E,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMrF,4BAAkC,kBAAC,EAAD,CAAO4C,MAAO,EAAGpB,KAAM2D,IAA5E,MAGE1B,EAAY9B,KAAI,SAAAC,GACd,IAAI0D,EAAW,IAEf,OADAA,EAAWA,EAASC,OAAO3D,GACpB,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAMrF,oBAAuBsF,EAAUlD,IAAKR,GAAzD,IAA6D,kBAAC,EAAD,CAAaJ,KAAM2D,EAAYxB,QAAS/B,IAArG,YCnBD4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1f9e7f25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_informed_decision_p2lh.f253a68b.svg\";","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport './App.css'\nimport './Navbar.css'\n\n\nfunction Navbar(){\n    return(\n        // This navbar uses the Router component in App js that it is wrapped around \n        <div>\n            <ul className=\"nav-bar\">\n                <li className=\"nav-item\">UCL Computer Science Module Marks</li>\n                <li><NavLink to={process.env.PUBLIC_URL+`/`} activeClassName=\"active\"> Home </NavLink></li>\n                <li><NavLink to={process.env.PUBLIC_URL+`/level6`} activeClassName=\"active\"> Level 6 </NavLink></li>\n                <li><NavLink to={process.env.PUBLIC_URL+`/level7`} activeClassName=\"active\"> Level 7 </NavLink></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Permanent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n          donec massa sapien faucibus et molestie ac.\n        </Typography>\n        <Typography paragraph>\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n        </Typography>\n      </main>\n    </div>\n  );\n}\n","import React, { } from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nfunction BarChart(props) {\n    // console.log(props.arr.map(x => x[\"Module Code\"]))\n    const data = {\n        labels: props.arr.map(x => x[\"Module Code\"]),\n        datasets: [\n            {\n                label: props.text,\n                data: props.arr.map(x => x[\"Mean\"]),\n                backgroundColor: \"skyblue\"\n            }\n        ]\n\n    }\n    return (<Bar data={data} />)\n}\n\n\nexport default BarChart","import React, { } from 'react'\nimport BarChart from './BarChart'\nimport informed from './images/undraw_informed_decision_p2lh.svg'\nimport './Home.css'\nfunction Home(props) {\n    const [data2015,data2016,data2017,data2018] = props.data\n\n\n    return (\n        <div className=\"home\">\n\n            \n            {/* <div className=\"home-row-1\">\n                <div className=\"home-row-1-text\">\n                    <h1>Welcome to the UCL Computer Science Module Mark Visualiser</h1>\n                    <p> One  </p>\n                </div>\n                <img src={informed} alt=\"\" className=\"home-row-1-img\"></img>\n            </div> */}\n\n            {/* <BarChart text=\"Comparison of means for year 2015/6\" arr={data2015} > </BarChart>    \n            <BarChart text=\"Comparison of means for year 2016/7\" arr={data2016} > </BarChart>  \n            <BarChart text=\"Comparison of means for year 2017/8\" arr={data2017}> </BarChart>  \n            <BarChart text=\"Comparison of means for year 2018/9\" arr={data2018} > </BarChart>   */}\n\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Card.css'\nfunction Card({module_code, module_name}) {\n    return (\n        <div className=\"card\" key={module_code}>\n        <Link className=\"link\" to={process.env.PUBLIC_URL + \"/\" + module_code}>\n\n            <div className=\"card-header\">\n                <h2> {module_code} </h2>\n            </div>\n\n            <div className=\"card-main\">\n                <h2 className=\"main-description\"> {module_name} </h2>\n            </div>\n        </Link>\n    </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport './App.css'\nimport './Level.css'\nimport BarChart from './BarChart'\nimport Card from './Card'\nfunction compare(a, b) {\n    if (a.Mean < b.Mean) {\n        return -1;\n    }\n    if (a.Mean > b.Mean) {\n        return 1;\n    }\n    return 0;\n}\n\n\nfunction Level(props) {\n    const data2018 = props.data[3]\n    const bar_text = \"Comparison of 2018/9 mean marks for Level \" + props.level.toString()\n    return (\n        <div>\n            <BarChart className=\"bar-level\" text={bar_text} arr={data2018.filter(x => x.Level === props.level).sort(compare)}></BarChart>\n            <div className=\"level\">\n                {data2018.filter(x => x.Level === props.level).map(x => (\n                    <Card module_code={x[\"Module Code\"]} module_name={x[\"Module Name\"]} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Level","import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport './App.css'\nimport './ModuleChart.css'\n\nfunction ModuleChart(props) {\n    const years = [2015, 2016, 2017, 2018]\n    const means = {}\n    const percentile_5 = {}\n    const percentile_25 = {}\n    const percentile_75 = {}\n    const percentile_95 = {}\n    let module_name = \"\"\n\n    for (const [i, element] of props.data.entries()) {\n        let modulecodes = element.map(x => x[\"Module Code\"])\n\n        if (modulecodes.includes(props.modcode)) {\n            means[i] = element[modulecodes.indexOf(props.modcode)]['Mean']\n            percentile_5[i] = element[modulecodes.indexOf(props.modcode)]['5th']\n            percentile_25[i] = element[modulecodes.indexOf(props.modcode)]['25th']\n            percentile_75[i] = element[modulecodes.indexOf(props.modcode)]['75th']\n            percentile_95[i] = element[modulecodes.indexOf(props.modcode)]['95th']\n            module_name = element[modulecodes.indexOf(props.modcode)][\"Module Name\"]\n        }\n        else {\n            means[i] = 0\n            percentile_5[i] = 0\n            percentile_25[i] = 0\n            percentile_75[i] = 0\n            percentile_95[i] = 0\n        }\n    }\n\n    const fill_val = false\n    const chart_data = {\n        labels: years,\n        datasets: [\n            {\n                label: \"Mean\",\n                data: Object.values(means),\n                fill: fill_val,\n                borderColor: \"black\",\n\n            },\n\n            {\n                label: \"5th\",\n                data: Object.values(percentile_5),\n                fill: fill_val,\n                borderColor: \"red\",\n            },\n            {\n                label: \"25th\",\n                data: Object.values(percentile_25),\n                fill: fill_val,\n                borderColor: \"purple\",\n            },\n            {\n                label: \"75th\",\n                data: Object.values(percentile_75),\n                fill: fill_val,\n                borderColor: \"blue\",\n            },\n            {\n                label: \"95th\",\n                data: Object.values(percentile_95),\n                fill: fill_val,\n                borderColor: \"green\",\n            }\n        ],\n    }\n\n    return (\n        <div className=\"module-chart-box\">\n            <Line\n                data={chart_data}\n                options={{\n                    maintainAspectRatio:false,\n                    title: {\n                        display: true,\n                        text: [props.modcode + \" : \" + module_name, \" Percentiles over 2015/6-2018/9\"],\n                        fontSize: 15,\n                    },\n                    legend: { position: 'bottom' },\n                    responsive: true,\n                    scales: {\n                        xAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Year',\n                                fontSize: 15\n                            }\n                        }],\n                        yAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Mark',\n                                fontSize: 15\n                            }\n                        }]\n                    },\n\n                }\n                }\n\n\n            >\n            </Line>\n        </div>\n    )\n\n}\n\n\nexport default ModuleChart","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport Navbar from './NavBar'\nimport Navbar2 from './NavBar2'\nimport Home from './Home'\nimport Level from './Level'\nimport ModuleChart from './ModuleChart';\n\nfunction App() {\n  let data2015 = require(\"./cs-module-data/data_2015_6.json\")\n  let data2016 = require(\"./cs-module-data/data_2016_7.json\")\n  let data2017 = require(\"./cs-module-data/data_2017_8.json\")\n  let data2018 = require(\"./cs-module-data/data_2018_9.json\")\n  const moduledata = [data2015, data2016, data2017, data2018]\n\n  let modulecodes = data2018.map(x => x[\"Module Code\"])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <Switch>\n          <Route exact path={process.env.PUBLIC_URL+\"/\"}><Home data={moduledata} />  </Route>\n          <Route exact path={process.env.PUBLIC_URL+\"/level6\"}><Level level={6} data={moduledata} />  </Route>\n          <Route exact path={process.env.PUBLIC_URL+\"/level7\"}><Level level={7} data={moduledata} />  </Route>\n\n          {\n            modulecodes.map(x => {\n              let mod_path = \"/\";\n              mod_path = mod_path.concat(x);\n              return <Route exact path={process.env.PUBLIC_URL+mod_path} key={x}> <ModuleChart data={moduledata} modcode={x} /> </Route>\n            })\n          }\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}